import { createGraphQLClientFactory } from 'lib/graphql-client-factory/create';
import { GraphQLSiteInfoService, SiteInfo } from '@sitecore-jss/sitecore-jss-nextjs';
import config from 'sitecore.config';
import fs from 'fs';
import path from 'path';
import chalk from 'chalk';

//TODO: better async logic
fetchSites().then(() => {});

async function fetchSites() {
  let sites: SiteInfo[] = [];
  const sitesFilePath = path.resolve('src/temp/sites.js');
  if (fs.existsSync(sitesFilePath)) {
    console.warn(`${sitesFilePath} already exists, skipping site fetch`);
    return;
  }
  console.log('Fetching site information');
  try {
    const siteInfoService = new GraphQLSiteInfoService({
      clientFactory: createGraphQLClientFactory(config),
    });
    sites = await siteInfoService.fetchSiteInfo();
  } catch (error) {
    console.error(chalk.red('Error fetching site information'));
    console.error(error);
  }
  let sitesText = `/* eslint-disable */
      // Do not edit this file, it is auto-generated at build time!
      // See scripts/bootstrap.ts to modify the generation of this file.
      const sites = ${JSON.stringify(sites)};\n`;

  sitesText += `module.exports = sites;`;

  console.log(`Writing fetched sites to ${sitesFilePath}`);
  fs.writeFileSync(sitesFilePath, sitesText, { encoding: 'utf8' });
}
